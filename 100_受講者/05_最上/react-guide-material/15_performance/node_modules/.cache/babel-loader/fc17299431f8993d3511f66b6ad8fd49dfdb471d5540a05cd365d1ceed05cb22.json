{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\work\\\\react-guide-material\\\\15_performance\\\\src\\\\020_memo\\\\end\\\\Child.js\";\nimport { memo } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction areEqual(prevProps, nextProps) {\n  if (prevProps.countB !== nextProps.countB) {\n    return false; // 再レンダリング\n  } else {\n    return true; // 再レンダリング発生なし\n  }\n  /*\r\n  nextProps を render に渡した結果が\r\n  prevProps を render に渡した結果となるときに true を返し\r\n  それ以外のときに false を返す\r\n  */\n}\nconst ChildMemo = /*#__PURE__*/memo(_c = ({\n  countB\n}) => {\n  console.log(\"%cChild render\", \"color: red;\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"child\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u5B50\\u30B3\\u30F3\\u30DD\\u30FC\\u30CD\\u30F3\\u30C8\\u9818\\u57DF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"\\u30DC\\u30BF\\u30F3B\\u30AF\\u30EA\\u30C3\\u30AF\\u56DE\\u6570\\uFF1A\", countB]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}, areEqual);\n_c2 = ChildMemo;\nexport default ChildMemo;\nvar _c, _c2;\n$RefreshReg$(_c, \"ChildMemo$memo\");\n$RefreshReg$(_c2, \"ChildMemo\");","map":{"version":3,"names":["memo","jsxDEV","_jsxDEV","areEqual","prevProps","nextProps","countB","ChildMemo","_c","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/Users/user/Documents/work/react-guide-material/15_performance/src/020_memo/end/Child.js"],"sourcesContent":["import { memo } from \"react\";\r\n\r\nfunction areEqual(prevProps, nextProps) {\r\n  if(prevProps.countB !== nextProps.countB) {\r\n    return false; // 再レンダリング\r\n  } else {\r\n    return true; // 再レンダリング発生なし\r\n  }\r\n  /*\r\n  nextProps を render に渡した結果が\r\n  prevProps を render に渡した結果となるときに true を返し\r\n  それ以外のときに false を返す\r\n  */\r\n}\r\n\r\nconst ChildMemo = memo(({ countB }) => {\r\n  console.log(\"%cChild render\", \"color: red;\");\r\n\r\n  return (\r\n    <div className=\"child\"\r\n    >\r\n      <h2>子コンポーネント領域</h2>\r\n      <span>ボタンBクリック回数：{countB}</span>\r\n    </div>\r\n  );\r\n}, areEqual);\r\n\r\nexport default ChildMemo;\r\n"],"mappings":";AAAA,SAASA,IAAI,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,QAAQA,CAACC,SAAS,EAAEC,SAAS,EAAE;EACtC,IAAGD,SAAS,CAACE,MAAM,KAAKD,SAAS,CAACC,MAAM,EAAE;IACxC,OAAO,KAAK,CAAC,CAAC;EAChB,CAAC,MAAM;IACL,OAAO,IAAI,CAAC,CAAC;EACf;EACA;AACF;AACA;AACA;AACA;AACA;AAEA,MAAMC,SAAS,gBAAGP,IAAI,CAAAQ,EAAA,GAACA,CAAC;EAAEF;AAAO,CAAC,KAAK;EACrCG,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE,aAAa,CAAC;EAE5C,oBACER,OAAA;IAAKS,SAAS,EAAC,OAAO;IAAAC,QAAA,gBAEpBV,OAAA;MAAAU,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBd,OAAA;MAAAU,QAAA,GAAM,+DAAW,EAACN,MAAM;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEV,CAAC,EAAEb,QAAQ,CAAC;AAACc,GAAA,GAVPV,SAAS;AAYf,eAAeA,SAAS;AAAC,IAAAC,EAAA,EAAAS,GAAA;AAAAC,YAAA,CAAAV,EAAA;AAAAU,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}