{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\work\\\\react-guide-material\\\\11_hooks_p1\\\\src\\\\070_practice_useContext\\\\end\\\\context\\\\CalcContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { createContext, useReducer, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CalcContext = /*#__PURE__*/createContext();\nexport const CalcDispatchContext = /*#__PURE__*/createContext();\nconst reducer = (state, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case \"change\":\n      {\n        const {\n          name,\n          value\n        } = payload;\n        return {\n          ...state,\n          [name]: value\n        };\n      }\n    case \"add\":\n      {\n        return {\n          ...state,\n          result: parseInt(state.a) + parseInt(state.b)\n        };\n      }\n    case \"minus\":\n      {\n        return {\n          ...state,\n          result: state.a - state.b\n        };\n      }\n    case \"divide\":\n      {\n        return {\n          ...state,\n          result: state.a / state.b\n        };\n      }\n    case \"multiply\":\n      {\n        return {\n          ...state,\n          result: state.a * state.b\n        };\n      }\n    default:\n      throw new Error(\"operator is invalid\");\n  }\n};\nexport const CalcProvider = ({\n  children\n}) => {\n  _s();\n  const initState = {\n    a: 1,\n    b: 2,\n    result: 3\n  };\n  const [state, dispatch] = useReducer(reducer, initState);\n  return /*#__PURE__*/_jsxDEV(CalcContext.Provider, {\n    value: state,\n    children: /*#__PURE__*/_jsxDEV(CalcDispatchContext.Provider, {\n      value: dispatch,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(CalcProvider, \"ivzsx5aR9qRFuEtyOcndflQiQ1Q=\");\n_c = CalcProvider;\nexport const useCalc = () => {\n  _s2();\n  return useContext(CalcContext);\n};\n_s2(useCalc, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const useDispatchCalc = () => {\n  _s3();\n  return useContext(CalcDispatchContext);\n};\n_s3(useDispatchCalc, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CalcProvider\");","map":{"version":3,"names":["createContext","useReducer","useContext","jsxDEV","_jsxDEV","CalcContext","CalcDispatchContext","reducer","state","type","payload","name","value","result","parseInt","a","b","Error","CalcProvider","children","_s","initState","dispatch","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCalc","_s2","useDispatchCalc","_s3","$RefreshReg$"],"sources":["C:/Users/user/Documents/work/react-guide-material/11_hooks_p1/src/070_practice_useContext/end/context/CalcContext.js"],"sourcesContent":["import { createContext, useReducer, useContext } from \"react\";\r\n\r\nexport const CalcContext = createContext();\r\nexport const CalcDispatchContext = createContext();\r\n\r\nconst reducer = (state, { type, payload }) => {\r\n  switch (type) {\r\n    case \"change\": {\r\n      const { name, value } = payload;\r\n      return { ...state, [name]: value };\r\n    }\r\n    case \"add\": {\r\n      return { ...state, result: parseInt(state.a) + parseInt(state.b) };\r\n    }\r\n    case \"minus\": {\r\n      return { ...state, result: state.a - state.b };\r\n    }\r\n    case \"divide\": {\r\n      return { ...state, result: state.a / state.b };\r\n    }\r\n    case \"multiply\": {\r\n      return { ...state, result: state.a * state.b };\r\n    }\r\n    default:\r\n      throw new Error(\"operator is invalid\");\r\n  }\r\n};\r\n\r\nexport const CalcProvider = ({ children }) => {\r\n  const initState = {\r\n    a: 1,\r\n    b: 2,\r\n    result: 3,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(reducer, initState);\r\n\r\n  return (\r\n    <CalcContext.Provider value={state}>\r\n      <CalcDispatchContext.Provider value={dispatch}>\r\n        {children}\r\n      </CalcDispatchContext.Provider>\r\n    </CalcContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCalc = () => useContext(CalcContext);\r\nexport const useDispatchCalc = () => useContext(CalcDispatchContext);\r\n"],"mappings":";;;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAC1C,OAAO,MAAMM,mBAAmB,gBAAGN,aAAa,CAAC,CAAC;AAElD,MAAMO,OAAO,GAAGA,CAACC,KAAK,EAAE;EAAEC,IAAI;EAAEC;AAAQ,CAAC,KAAK;EAC5C,QAAQD,IAAI;IACV,KAAK,QAAQ;MAAE;QACb,MAAM;UAAEE,IAAI;UAAEC;QAAM,CAAC,GAAGF,OAAO;QAC/B,OAAO;UAAE,GAAGF,KAAK;UAAE,CAACG,IAAI,GAAGC;QAAM,CAAC;MACpC;IACA,KAAK,KAAK;MAAE;QACV,OAAO;UAAE,GAAGJ,KAAK;UAAEK,MAAM,EAAEC,QAAQ,CAACN,KAAK,CAACO,CAAC,CAAC,GAAGD,QAAQ,CAACN,KAAK,CAACQ,CAAC;QAAE,CAAC;MACpE;IACA,KAAK,OAAO;MAAE;QACZ,OAAO;UAAE,GAAGR,KAAK;UAAEK,MAAM,EAAEL,KAAK,CAACO,CAAC,GAAGP,KAAK,CAACQ;QAAE,CAAC;MAChD;IACA,KAAK,QAAQ;MAAE;QACb,OAAO;UAAE,GAAGR,KAAK;UAAEK,MAAM,EAAEL,KAAK,CAACO,CAAC,GAAGP,KAAK,CAACQ;QAAE,CAAC;MAChD;IACA,KAAK,UAAU;MAAE;QACf,OAAO;UAAE,GAAGR,KAAK;UAAEK,MAAM,EAAEL,KAAK,CAACO,CAAC,GAAGP,KAAK,CAACQ;QAAE,CAAC;MAChD;IACA;MACE,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;EAC1C;AACF,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAMC,SAAS,GAAG;IAChBN,CAAC,EAAE,CAAC;IACJC,CAAC,EAAE,CAAC;IACJH,MAAM,EAAE;EACV,CAAC;EAED,MAAM,CAACL,KAAK,EAAEc,QAAQ,CAAC,GAAGrB,UAAU,CAACM,OAAO,EAAEc,SAAS,CAAC;EAExD,oBACEjB,OAAA,CAACC,WAAW,CAACkB,QAAQ;IAACX,KAAK,EAAEJ,KAAM;IAAAW,QAAA,eACjCf,OAAA,CAACE,mBAAmB,CAACiB,QAAQ;MAACX,KAAK,EAAEU,QAAS;MAAAH,QAAA,EAC3CA;IAAQ;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACmB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAE3B,CAAC;AAACP,EAAA,CAhBWF,YAAY;AAAAU,EAAA,GAAZV,YAAY;AAkBzB,OAAO,MAAMW,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM5B,UAAU,CAACG,WAAW,CAAC;AAAA;AAACyB,GAAA,CAAxCD,OAAO;AACpB,OAAO,MAAME,eAAe,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM9B,UAAU,CAACI,mBAAmB,CAAC;AAAA;AAAC0B,GAAA,CAAxDD,eAAe;AAAA,IAAAH,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}