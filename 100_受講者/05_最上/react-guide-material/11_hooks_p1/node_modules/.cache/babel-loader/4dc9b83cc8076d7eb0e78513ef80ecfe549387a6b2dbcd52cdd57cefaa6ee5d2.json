{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\work\\\\react-guide-material\\\\11_hooks_p1\\\\src\\\\070_practice_useContext\\\\start\\\\Example.js\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CALC_OPTIONS = [\"add\", \"minus\", \"divide\", \"multiply\"];\n\n// const reducer = (state, { type, payload }) => {\n//   switch (type) {\n//     case \"change\": {\n//       const { name, value } = payload;\n//       return { ...state, [name]: value };\n//     }\n//     case \"add\": {\n//       return { ...state, result: state.a + state.b };\n//     }\n//     case \"minus\": {\n//       return { ...state, result: state.a - state.b };\n//     }\n//     case \"divide\": {\n//       return { ...state, result: state.a / state.b };\n//     }\n//     case \"multiply\": {\n//       return { ...state, result: state.a * state.b };\n//     }\n//     default:\n//       throw new Error(\"operator is invalid\");\n//   }\n// };\n\nconst Example = () => {\n  const initState = {\n    a: 1,\n    b: 2,\n    result: 3\n  };\n\n  // const [state, dispatch] = useReducer(reducer, initState);\n\n  const calculate = e => {\n    dispatch({\n      type: e.target.value\n    });\n  };\n  // const numChangeHandler = (e) => {\n  //   dispatch({type: 'change', payload: {name: e.target.name, value: e.target.value}});\n  // };\n  return (\n    /*#__PURE__*/\n    /* 完成系のJSX */\n    // <CalcProvider>\n    //   <Input name=\"a\"/>      \n    //   <Input name=\"b\" />      \n    //   <Select />\n    //   <Result />      \n    // </CalcProvider>\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u7DF4\\u7FD2\\u554F\\u984C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Example\\u5185\\u306E\\u30B3\\u30FC\\u30C9\\u3092\\u30B3\\u30F3\\u30DD\\u30FC\\u30CD\\u30F3\\u30C8\\u306B\\u5206\\u5272\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\\u307E\\u305F\\u3001\\u30B9\\u30C6\\u30FC\\u30C8\\u306FContext\\u7D4C\\u7531\\u3067\\u3084\\u308A\\u53D6\\u308A\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: state.type,\n        name: \"type\",\n        onChange: calculate,\n        children: CALC_OPTIONS.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: type,\n          children: type\n        }, type, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\u7D50\\u679C\\uFF1A\", state.result]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  );\n};\n_c = Example;\nexport default Example;\nvar _c;\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["useReducer","jsxDEV","_jsxDEV","Fragment","_Fragment","CALC_OPTIONS","Example","initState","a","b","result","calculate","e","dispatch","type","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","state","name","onChange","map","_c","$RefreshReg$"],"sources":["C:/Users/user/Documents/work/react-guide-material/11_hooks_p1/src/070_practice_useContext/start/Example.js"],"sourcesContent":["import { useReducer } from \"react\";\r\n\r\nconst CALC_OPTIONS = [\"add\", \"minus\", \"divide\", \"multiply\"];\r\n\r\n// const reducer = (state, { type, payload }) => {\r\n//   switch (type) {\r\n//     case \"change\": {\r\n//       const { name, value } = payload;\r\n//       return { ...state, [name]: value };\r\n//     }\r\n//     case \"add\": {\r\n//       return { ...state, result: state.a + state.b };\r\n//     }\r\n//     case \"minus\": {\r\n//       return { ...state, result: state.a - state.b };\r\n//     }\r\n//     case \"divide\": {\r\n//       return { ...state, result: state.a / state.b };\r\n//     }\r\n//     case \"multiply\": {\r\n//       return { ...state, result: state.a * state.b };\r\n//     }\r\n//     default:\r\n//       throw new Error(\"operator is invalid\");\r\n//   }\r\n// };\r\n\r\nconst Example = () => {\r\n  const initState = {\r\n    a: 1,\r\n    b: 2,\r\n    result: 3,\r\n  };\r\n\r\n  // const [state, dispatch] = useReducer(reducer, initState);\r\n\r\n  const calculate = (e) => {\r\n    dispatch({type: e.target.value});\r\n  };\r\n  // const numChangeHandler = (e) => {\r\n  //   dispatch({type: 'change', payload: {name: e.target.name, value: e.target.value}});\r\n  // };\r\n  return (\r\n    /* 完成系のJSX */\r\n    // <CalcProvider>\r\n    //   <Input name=\"a\"/>      \r\n    //   <Input name=\"b\" />      \r\n    //   <Select />\r\n    //   <Result />      \r\n    // </CalcProvider>\r\n    <>\r\n      <h3>練習問題</h3>\r\n      <p>Example内のコードをコンポーネントに分割してください。また、ステートはContext経由でやり取りしてください。</p>\r\n      {/* <div>\r\n        a:\r\n        <input\r\n          type=\"number\"\r\n          name=\"a\"\r\n          value={state.a}\r\n          onChange={numChangeHandler}\r\n        />\r\n      </div> */}\r\n      {/* <div>\r\n        b:\r\n        <input\r\n          type=\"number\"\r\n          name=\"b\"\r\n          value={state.b}\r\n          onChange={numChangeHandler}\r\n        />\r\n      </div> */}\r\n      <select value={state.type} name=\"type\" onChange={calculate}>\r\n        {CALC_OPTIONS.map((type) => (\r\n          <option key={type} value={type}>\r\n            {type}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <h3>結果：{state.result}</h3>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Example;\r\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnC,MAAMC,YAAY,GAAG,CAAC,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,UAAU,CAAC;;AAE3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,OAAO,GAAGA,CAAA,KAAM;EACpB,MAAMC,SAAS,GAAG;IAChBC,CAAC,EAAE,CAAC;IACJC,CAAC,EAAE,CAAC;IACJC,MAAM,EAAE;EACV,CAAC;;EAED;;EAEA,MAAMC,SAAS,GAAIC,CAAC,IAAK;IACvBC,QAAQ,CAAC;MAACC,IAAI,EAAEF,CAAC,CAACG,MAAM,CAACC;IAAK,CAAC,CAAC;EAClC,CAAC;EACD;EACA;EACA;EACA;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACAd,OAAA,CAAAE,SAAA;MAAAa,QAAA,gBACEf,OAAA;QAAAe,QAAA,EAAI;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACbnB,OAAA;QAAAe,QAAA,EAAG;MAA2D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAmBlEnB,OAAA;QAAQc,KAAK,EAAEM,KAAK,CAACR,IAAK;QAACS,IAAI,EAAC,MAAM;QAACC,QAAQ,EAAEb,SAAU;QAAAM,QAAA,EACxDZ,YAAY,CAACoB,GAAG,CAAEX,IAAI,iBACrBZ,OAAA;UAAmBc,KAAK,EAAEF,IAAK;UAAAG,QAAA,EAC5BH;QAAI,GADMA,IAAI;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAET,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACTnB,OAAA;QAAAe,QAAA,GAAI,oBAAG,EAACK,KAAK,CAACZ,MAAM;MAAA;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA,eAC1B;EAAC;AAEP,CAAC;AAACK,EAAA,GAtDIpB,OAAO;AAwDb,eAAeA,OAAO;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}