{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\work\\\\react-guide-material\\\\11_hooks_p1\\\\src\\\\080_practice_reminder\\\\start\\\\components\\\\Item.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useDispatchTodos } from \"../context/TodoContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Item = ({\n  todo\n}) => {\n  _s();\n  const [editingContent, setEditingContent] = useState(todo.content);\n  const dispatch = useDispatchTodos();\n  const changeContent = e => setEditingContent(e.target.value);\n  const toggleEditMode = () => {\n    const newTodo = {\n      ...todo,\n      editing: !todo.edting\n    };\n    dispatch({\n      type: 'todo/update',\n      todo: newTodo\n    });\n  };\n  const confirmContent = e => {\n    e.preventDefault();\n    const newTodo = {\n      ...todo,\n      editing: !todo.editing,\n      content: editingContent\n    };\n    dispatch({\n      type: 'todo/update',\n      todo: newTodo\n    });\n  };\n  const complete = todo => {\n    dispatch({\n      type: 'todo/delete',\n      todo\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => complete(todo),\n      children: \"\\u5B8C\\u4E86\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: confirmContent,\n      style: {\n        display: 'inline'\n      },\n      children: todo.editing ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editingContent,\n        onChange: changeContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        onDoubleClick: toggleEditMode,\n        children: todo.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, todo.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(Item, \"Per/cb+1PYiq2AynKayLBYErbNQ=\", false, function () {\n  return [useDispatchTodos];\n});\n_c = Item;\nexport default Item;\nvar _c;\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"names":["useState","useDispatchTodos","jsxDEV","_jsxDEV","Item","todo","_s","editingContent","setEditingContent","content","dispatch","changeContent","e","target","value","toggleEditMode","newTodo","editing","edting","type","confirmContent","preventDefault","complete","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","style","display","onChange","onDoubleClick","id","_c","$RefreshReg$"],"sources":["C:/Users/user/Documents/work/react-guide-material/11_hooks_p1/src/080_practice_reminder/start/components/Item.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useDispatchTodos } from \"../context/TodoContext\";\r\n\r\nconst Item = ({todo}) => {\r\n    const [editingContent, setEditingContent ] = useState(todo.content);\r\n    const dispatch = useDispatchTodos();\r\n\r\n    const changeContent = (e) => setEditingContent(e.target.value);\r\n    \r\n    const toggleEditMode = () => {\r\n        const newTodo = {...todo, editing: !todo.edting};\r\n        dispatch({type:'todo/update',todo: newTodo})\r\n    }\r\n\r\n    const confirmContent = (e) => {\r\n        e.preventDefault();\r\n        const newTodo = {...todo, editing: !todo.editing ,content: editingContent};\r\n        dispatch({type:'todo/update',todo: newTodo})\r\n    }\r\n    const complete = (todo) => {\r\n        dispatch({type: 'todo/delete',todo})\r\n    }\r\n    return (\r\n        <div key={todo.id}>\r\n        <button onClick={() => complete(todo)}>完了</button>\r\n        <form onSubmit={confirmContent} style={{display: 'inline'}}>\r\n            {todo.editing ? (\r\n                <input type=\"text\"\r\n                    value={editingContent}\r\n                    onChange={changeContent} />\r\n                    ) : (\r\n                    <span onDoubleClick={toggleEditMode}>{todo.content}</span>\r\n                    )\r\n            }\r\n        </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Item;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,gBAAgB,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,IAAI,GAAGA,CAAC;EAACC;AAAI,CAAC,KAAK;EAAAC,EAAA;EACrB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAE,GAAGR,QAAQ,CAACK,IAAI,CAACI,OAAO,CAAC;EACnE,MAAMC,QAAQ,GAAGT,gBAAgB,CAAC,CAAC;EAEnC,MAAMU,aAAa,GAAIC,CAAC,IAAKJ,iBAAiB,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAE9D,MAAMC,cAAc,GAAGA,CAAA,KAAM;IACzB,MAAMC,OAAO,GAAG;MAAC,GAAGX,IAAI;MAAEY,OAAO,EAAE,CAACZ,IAAI,CAACa;IAAM,CAAC;IAChDR,QAAQ,CAAC;MAACS,IAAI,EAAC,aAAa;MAACd,IAAI,EAAEW;IAAO,CAAC,CAAC;EAChD,CAAC;EAED,MAAMI,cAAc,GAAIR,CAAC,IAAK;IAC1BA,CAAC,CAACS,cAAc,CAAC,CAAC;IAClB,MAAML,OAAO,GAAG;MAAC,GAAGX,IAAI;MAAEY,OAAO,EAAE,CAACZ,IAAI,CAACY,OAAO;MAAER,OAAO,EAAEF;IAAc,CAAC;IAC1EG,QAAQ,CAAC;MAACS,IAAI,EAAC,aAAa;MAACd,IAAI,EAAEW;IAAO,CAAC,CAAC;EAChD,CAAC;EACD,MAAMM,QAAQ,GAAIjB,IAAI,IAAK;IACvBK,QAAQ,CAAC;MAACS,IAAI,EAAE,aAAa;MAACd;IAAI,CAAC,CAAC;EACxC,CAAC;EACD,oBACIF,OAAA;IAAAoB,QAAA,gBACApB,OAAA;MAAQqB,OAAO,EAAEA,CAAA,KAAMF,QAAQ,CAACjB,IAAI,CAAE;MAAAkB,QAAA,EAAC;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAClDzB,OAAA;MAAM0B,QAAQ,EAAET,cAAe;MAACU,KAAK,EAAE;QAACC,OAAO,EAAE;MAAQ,CAAE;MAAAR,QAAA,EACtDlB,IAAI,CAACY,OAAO,gBACTd,OAAA;QAAOgB,IAAI,EAAC,MAAM;QACdL,KAAK,EAAEP,cAAe;QACtByB,QAAQ,EAAErB;MAAc;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAE3BzB,OAAA;QAAM8B,aAAa,EAAElB,cAAe;QAAAQ,QAAA,EAAElB,IAAI,CAACI;MAAO;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IACxD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEP,CAAC;EAAA,GAXGvB,IAAI,CAAC6B,EAAE;IAAAT,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAYZ,CAAC;AAEd,CAAC;AAAAtB,EAAA,CAlCKF,IAAI;EAAA,QAEWH,gBAAgB;AAAA;AAAAkC,EAAA,GAF/B/B,IAAI;AAoCV,eAAeA,IAAI;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}