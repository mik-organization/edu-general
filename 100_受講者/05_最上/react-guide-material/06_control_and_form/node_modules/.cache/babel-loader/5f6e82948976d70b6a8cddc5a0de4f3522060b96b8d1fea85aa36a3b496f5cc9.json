{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\work\\\\react-guide-material\\\\06_control_and_form\\\\src\\\\130_reminder\\\\start\\\\Example.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Todo from \"./components/Todo.js\";\nimport List from \"./components/List.js\";\nimport Form from \"./components/Form.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Example = () => {\n  _s();\n  const [task, setTask] = useState(\"\");\n  const onClick = e => {\n    todosList.map(tasks => {\n      const newTask = {\n        ...todosList\n      };\n      console.log(e.target.value);\n      if (newTask.id != e.target.value) {\n        newTask(tasks);\n      }\n      return setTask(newTask);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Reminder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Todo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Example, \"68Y0odjr5YYZ1eMe5aWHrdIJ63Q=\");\n_c = Example;\nexport default Example;\nvar _c;\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["useState","Todo","List","Form","jsxDEV","_jsxDEV","Fragment","_Fragment","Example","_s","task","setTask","onClick","e","todosList","map","tasks","newTask","console","log","target","value","id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Documents/work/react-guide-material/06_control_and_form/src/130_reminder/start/Example.js"],"sourcesContent":["import {useState} from \"react\";\r\nimport Todo from \"./components/Todo.js\";\r\nimport List from \"./components/List.js\";\r\nimport Form from \"./components/Form.js\";\r\n\r\nconst Example = () => {\r\n\r\n\r\nconst [task, setTask] = useState(\"\");\r\n\r\nconst onClick = (e) => {\r\n  todosList.map(tasks => {\r\n    const newTask = {...todosList};\r\n    console.log(e.target.value);\r\n    if( newTask.id != e.target.value){\r\n      newTask(tasks);\r\n    }\r\n    return setTask(newTask);\r\n})\r\n}\r\n  return (\r\n    <>\r\n      {/* <h3>完成系と同じような機能を作成してください。</h3>\r\n      <p>また、枠線で囲まれた部品をコンポーネントに分離してください。</p> */}\r\n      <h3>Reminder</h3>\r\n      <Todo />\r\n      \r\n      {/* <Todo \r\n      {todosList.map(({id, content})=>{\r\n        return(\r\n          <div>\r\n          <label key ={id}></label>\r\n          <button \r\n            value =  {id}\r\n            htmlFor = {id}\r\n            onClick={onClick}\r\n          >完了\r\n          </button>\r\n          {content}\r\n          </div>\r\n          )\r\n      })  */}\r\n    {/* }\r\n      />\r\n       <input\r\n        id=\"123\"\r\n        placeholder=\"\"  //何も入力されていないときに表示される文字を指定できる\r\n        value={task}\r\n        onChange={(e)=>setTask(e.target.value)}\r\n      />\r\n      <button >追加</button> */}\r\n\r\n     \r\n    </>\r\n  );\r\n};\r\n\r\nexport default Example;\r\n"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,IAAI,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAGtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMY,OAAO,GAAIC,CAAC,IAAK;IACrBC,SAAS,CAACC,GAAG,CAACC,KAAK,IAAI;MACrB,MAAMC,OAAO,GAAG;QAAC,GAAGH;MAAS,CAAC;MAC9BI,OAAO,CAACC,GAAG,CAACN,CAAC,CAACO,MAAM,CAACC,KAAK,CAAC;MAC3B,IAAIJ,OAAO,CAACK,EAAE,IAAIT,CAAC,CAACO,MAAM,CAACC,KAAK,EAAC;QAC/BJ,OAAO,CAACD,KAAK,CAAC;MAChB;MACA,OAAOL,OAAO,CAACM,OAAO,CAAC;IAC3B,CAAC,CAAC;EACF,CAAC;EACC,oBACEZ,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBAGElB,OAAA;MAAAkB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBtB,OAAA,CAACJ,IAAI;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eA4BR,CAAC;AAEP,CAAC;AAAClB,EAAA,CAlDID,OAAO;AAAAoB,EAAA,GAAPpB,OAAO;AAoDb,eAAeA,OAAO;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}