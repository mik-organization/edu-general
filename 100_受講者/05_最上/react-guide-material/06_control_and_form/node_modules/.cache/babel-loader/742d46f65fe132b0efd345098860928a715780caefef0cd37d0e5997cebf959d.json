{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\work\\\\react-guide-material\\\\06_control_and_form\\\\src\\\\110_multi_checkbox\\\\start\\\\Example.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Example = () => {\n  _s();\n  const [fruits, setFruits] = useState([{\n    label: \"Apple\",\n    value: 100,\n    checked: false\n  }, {\n    label: \"Banana\",\n    value: 200,\n    checked: false\n  }, {\n    label: \"Cherry\",\n    value: 300,\n    checked: false\n  }]);\n  const [sum, setSum] = useState(0);\n  const handleChange = e => {\n    const newFruits = fruits.map(fruits => {\n      const newFruit = {\n        ...fruits\n      };\n      if (newFruit.label === e.target.value) {\n        newFruit.checked = !fruits.checked;\n      }\n      return newFruit;\n    });\n    setFruits(newFruits);\n    let sumVal = 0;\n    newFruits.forEach(fruit => {\n      if (fruit.checked) {\n        sumVal += fruits.value;\n      }\n    });\n    setSum(sumVal);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [fruits.map(fruits => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: fruits.label,\n          type: \"checkbox\",\n          value: fruits.label,\n          checked: fruits.checked,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: fruits.label,\n          children: [fruits.label, \":\", fruits.value]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)]\n      }, fruits.label, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\u5408\\u8A08\\uFF1A\", sum]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Example, \"BTVzwCrD1I/sK/EDu490ryHccrs=\");\n_c = Example;\nexport default Example;\nvar _c;\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Example","_s","fruits","setFruits","label","value","checked","sum","setSum","handleChange","e","newFruits","map","newFruit","target","sumVal","forEach","fruit","children","id","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","_c","$RefreshReg$"],"sources":["C:/Users/user/Documents/work/react-guide-material/06_control_and_form/src/110_multi_checkbox/start/Example.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst Example = () => {\r\n  const [fruits, setFruits] = useState([\r\n    { label: \"Apple\", value: 100, checked: false },\r\n    { label: \"Banana\", value: 200, checked: false },\r\n    { label: \"Cherry\", value: 300, checked: false },\r\n  ]);\r\n\r\n  const [sum, setSum] = useState(0);\r\n\r\n  const handleChange = (e) =>{\r\n   const newFruits = fruits.map(fruits => {\r\n      const newFruit = {...fruits};\r\n\r\n      if(newFruit.label === e.target.value){\r\n        newFruit.checked = !fruits.checked;\r\n      }\r\n      return newFruit;\r\n    })\r\n\r\n    setFruits(newFruits);\r\n\r\n    let sumVal = 0;\r\n    newFruits.forEach(fruit => {\r\n      if(fruit.checked){\r\n        sumVal+=fruits.value;\r\n      }\r\n    });\r\n    setSum(sumVal);\r\n  }\r\n  return (\r\n    <div>\r\n      {fruits.map(fruits => {\r\n        return  (\r\n            <div key={fruits.label}>\r\n              <input\r\n                id={fruits.label}\r\n                type=\"checkbox\"\r\n                value={fruits.label}\r\n                checked={fruits.checked}\r\n                onChange={handleChange}\r\n              />\r\n              <label htmlFor={fruits.label}>\r\n                {fruits.label}:{fruits.value}\r\n              </label>\r\n            </div>\r\n        )\r\n      })}\r\n      \r\n      <div>合計：{sum}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Example;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,CACnC;IAAEO,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAE,GAAG;IAAEC,OAAO,EAAE;EAAM,CAAC,EAC9C;IAAEF,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE,GAAG;IAAEC,OAAO,EAAE;EAAM,CAAC,EAC/C;IAAEF,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE,GAAG;IAAEC,OAAO,EAAE;EAAM,CAAC,CAChD,CAAC;EAEF,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAEjC,MAAMY,YAAY,GAAIC,CAAC,IAAI;IAC1B,MAAMC,SAAS,GAAGT,MAAM,CAACU,GAAG,CAACV,MAAM,IAAI;MACpC,MAAMW,QAAQ,GAAG;QAAC,GAAGX;MAAM,CAAC;MAE5B,IAAGW,QAAQ,CAACT,KAAK,KAAKM,CAAC,CAACI,MAAM,CAACT,KAAK,EAAC;QACnCQ,QAAQ,CAACP,OAAO,GAAG,CAACJ,MAAM,CAACI,OAAO;MACpC;MACA,OAAOO,QAAQ;IACjB,CAAC,CAAC;IAEFV,SAAS,CAACQ,SAAS,CAAC;IAEpB,IAAII,MAAM,GAAG,CAAC;IACdJ,SAAS,CAACK,OAAO,CAACC,KAAK,IAAI;MACzB,IAAGA,KAAK,CAACX,OAAO,EAAC;QACfS,MAAM,IAAEb,MAAM,CAACG,KAAK;MACtB;IACF,CAAC,CAAC;IACFG,MAAM,CAACO,MAAM,CAAC;EAChB,CAAC;EACD,oBACEhB,OAAA;IAAAmB,QAAA,GACGhB,MAAM,CAACU,GAAG,CAACV,MAAM,IAAI;MACpB,oBACIH,OAAA;QAAAmB,QAAA,gBACEnB,OAAA;UACEoB,EAAE,EAAEjB,MAAM,CAACE,KAAM;UACjBgB,IAAI,EAAC,UAAU;UACff,KAAK,EAAEH,MAAM,CAACE,KAAM;UACpBE,OAAO,EAAEJ,MAAM,CAACI,OAAQ;UACxBe,QAAQ,EAAEZ;QAAa;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC,eACF1B,OAAA;UAAO2B,OAAO,EAAExB,MAAM,CAACE,KAAM;UAAAc,QAAA,GAC1BhB,MAAM,CAACE,KAAK,EAAC,GAAC,EAACF,MAAM,CAACG,KAAK;QAAA;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB,CAAC;MAAA,GAVAvB,MAAM,CAACE,KAAK;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWjB,CAAC;IAEZ,CAAC,CAAC,eAEF1B,OAAA;MAAAmB,QAAA,GAAK,oBAAG,EAACX,GAAG;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEV,CAAC;AAACxB,EAAA,CAnDID,OAAO;AAAA2B,EAAA,GAAP3B,OAAO;AAqDb,eAAeA,OAAO;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}