{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\work\\\\react-guide-material\\\\19_test\\\\src\\\\040_test_suite\\\\start\\\\components\\\\Counter.test.js\";\nimport { fireEvent, render, screen } from \"@testing-library/react\";\nimport Counter from \"./Counter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndescribe('Counterコンポーネントの動作確認', () => {\n  describe('初期表示の正常確認', () => {\n    test('「現在のカウント」が0かどうか', () => {\n      render( /*#__PURE__*/_jsxDEV(Counter, {\n        originCount: 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 14\n      }, this));\n      const spanElBeforeUpdate = screen.getByText('現在のカウント:0');\n      expect(spanElBeforeUpdate).toBeInTheDocument();\n    });\n    test('「現在のカウント」が0かどうか', () => {\n      render( /*#__PURE__*/_jsxDEV(Counter, {\n        originCount: 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 14\n      }, this));\n      const spanElBeforeUpdate = screen.getByText('現在のカウント:0');\n      expect(spanElBeforeUpdate).toBeInTheDocument();\n    });\n  });\n  describe('ボタン制御の確認', () => {\n    test('「カウントアップ」押下で「現在のカウント」が+1されるか', () => {\n      render( /*#__PURE__*/_jsxDEV(Counter, {\n        originCount: 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 14\n      }, this));\n      const spanElBeforeUpdate = screen.getByText('現在のカウント:0');\n      expect(spanElBeforeUpdate).toBeInTheDocument();\n      const btn = screen.getByRole('button', {\n        name: 'カウントアップ'\n      });\n      fireEvent.click(btn);\n      const spanEl = screen.getByText('現在のカウント:1');\n      expect(spanEl).toBeInTheDocument();\n    });\n    test('「カウントダウン」押下で「現在のカウント」が-1されるか', () => {\n      render( /*#__PURE__*/_jsxDEV(Counter, {\n        originCount: 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 14\n      }, this));\n      const spanElBeforeUpdate = screen.getByText('現在のカウント:0');\n      expect(spanElBeforeUpdate).toBeInTheDocument();\n      const btn = screen.getByRole('button', {\n        name: 'カウントダウン'\n      });\n      fireEvent.click(btn);\n      const spanEl = screen.getByText('現在のカウント:-1');\n      expect(spanEl).toBeInTheDocument();\n    });\n    test('「クリア」押下で「現在のカウント」が0になるか', () => {\n      render( /*#__PURE__*/_jsxDEV(Counter, {\n        originCount: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 14\n      }, this));\n      const spanElBeforeUpdate = screen.getByText('現在のカウント:2');\n      expect(spanElBeforeUpdate).toBeInTheDocument();\n      const btn = screen.getByRole('button', {\n        name: 'クリア'\n      });\n      fireEvent.click(btn);\n      const spanEl = screen.getByText('現在のカウント:0');\n      expect(spanEl).toBeInTheDocument();\n    });\n  });\n});","map":{"version":3,"names":["fireEvent","render","screen","Counter","jsxDEV","_jsxDEV","describe","test","originCount","fileName","_jsxFileName","lineNumber","columnNumber","spanElBeforeUpdate","getByText","expect","toBeInTheDocument","btn","getByRole","name","click","spanEl"],"sources":["C:/Users/user/Documents/work/react-guide-material/19_test/src/040_test_suite/start/components/Counter.test.js"],"sourcesContent":["import { fireEvent, render, screen } from \"@testing-library/react\";\r\nimport Counter from \"./Counter\";\r\n\r\ndescribe('Counterコンポーネントの動作確認', () => {\r\n\r\n  describe('初期表示の正常確認', () => {\r\n    test('「現在のカウント」が0かどうか', () => {\r\n      render(<Counter originCount={0} />);\r\n      \r\n      const spanElBeforeUpdate = screen.getByText('現在のカウント:0')\r\n      expect(spanElBeforeUpdate).toBeInTheDocument();\r\n    })\r\n    \r\n    test('「現在のカウント」が0かどうか', () => {\r\n      render(<Counter originCount={0} />);\r\n      \r\n      const spanElBeforeUpdate = screen.getByText('現在のカウント:0')\r\n      expect(spanElBeforeUpdate).toBeInTheDocument();\r\n    })\r\n  })\r\n\r\n  describe('ボタン制御の確認', () => {\r\n    test('「カウントアップ」押下で「現在のカウント」が+1されるか', () => {\r\n      render(<Counter originCount={0} />);\r\n      \r\n      const spanElBeforeUpdate = screen.getByText('現在のカウント:0')\r\n      expect(spanElBeforeUpdate).toBeInTheDocument();\r\n    \r\n      const btn = screen.getByRole('button', { name: 'カウントアップ'});\r\n      fireEvent.click(btn);\r\n    \r\n      const spanEl = screen.getByText('現在のカウント:1')\r\n      expect(spanEl).toBeInTheDocument();\r\n    })\r\n  \r\n    test('「カウントダウン」押下で「現在のカウント」が-1されるか', () => {\r\n      render(<Counter originCount={0} />);\r\n      \r\n      const spanElBeforeUpdate = screen.getByText('現在のカウント:0')\r\n      expect(spanElBeforeUpdate).toBeInTheDocument();\r\n    \r\n      const btn = screen.getByRole('button', { name: 'カウントダウン'});\r\n      fireEvent.click(btn);\r\n    \r\n      const spanEl = screen.getByText('現在のカウント:-1')\r\n      expect(spanEl).toBeInTheDocument();\r\n    })\r\n  \r\n    test('「クリア」押下で「現在のカウント」が0になるか', () => {\r\n      render(<Counter originCount={2} />);\r\n      \r\n      const spanElBeforeUpdate = screen.getByText('現在のカウント:2')\r\n      expect(spanElBeforeUpdate).toBeInTheDocument();\r\n    \r\n      const btn = screen.getByRole('button', { name: 'クリア'});\r\n      fireEvent.click(btn);\r\n    \r\n      const spanEl = screen.getByText('現在のカウント:0')\r\n      expect(spanEl).toBeInTheDocument();\r\n    })\r\n  \r\n  });\r\n  \r\n  })\r\n \r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}