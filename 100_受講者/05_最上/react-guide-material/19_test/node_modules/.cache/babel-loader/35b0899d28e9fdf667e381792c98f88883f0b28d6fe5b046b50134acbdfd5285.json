{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\work\\\\react-guide-material\\\\19_test\\\\src\\\\030_how_to_test\\\\start\\\\components\\\\Counter.test.js\";\nimport { render, screen, fireEvent } from \"@testing-library/react\";\nimport Counter from \"./Counter\";\n\n/* POINT テストコードを書く際の注意点\r\nArrage:(テストデータ、条件、環境の設定).\r\nAct:(ロジックの実行、関数の実行).\r\nAssertion:(実行結果と期待する結果の比較).\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntest('「カウントアップ」押下で「現在のカウント」が+1されるか', () => {\n  // Arrage\n  render( /*#__PURE__*/_jsxDEV(Counter, {\n    originCount: 0\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 12\n  }, this));\n\n  // 更新前\n  const spanElBeforeUpdate = screen.getByText('現在のカウント:0');\n  expect(spanElBeforeUpdate).toBeInTheDocument();\n\n  // Act\n  const btn = screen.getByRole('button', {\n    name: 'カウントアップ'\n  });\n  fireEvent.click(btn);\n\n  // Assertion\n  const spanEl = screen.getByText('現在のカウント:1');\n  expect(spanEl).toBeInTheDocument();\n});","map":{"version":3,"names":["render","screen","fireEvent","Counter","jsxDEV","_jsxDEV","test","originCount","fileName","_jsxFileName","lineNumber","columnNumber","spanElBeforeUpdate","getByText","expect","toBeInTheDocument","btn","getByRole","name","click","spanEl"],"sources":["C:/Users/user/Documents/work/react-guide-material/19_test/src/030_how_to_test/start/components/Counter.test.js"],"sourcesContent":["import { render, screen, fireEvent } from \"@testing-library/react\";\r\nimport Counter from \"./Counter\";\r\n\r\n/* POINT テストコードを書く際の注意点\r\nArrage:(テストデータ、条件、環境の設定).\r\nAct:(ロジックの実行、関数の実行).\r\nAssertion:(実行結果と期待する結果の比較).\r\n*/\r\ntest('「カウントアップ」押下で「現在のカウント」が+1されるか', () => {\r\n    // Arrage\r\n    render(<Counter originCount={0} />)\r\n\r\n    // 更新前\r\n    const spanElBeforeUpdate = screen.getByText('現在のカウント:0');\r\n    expect(spanElBeforeUpdate).toBeInTheDocument();\r\n\r\n    // Act\r\n    const btn = screen.getByRole('button', {name: 'カウントアップ'});\r\n    fireEvent.click(btn)\r\n\r\n    // Assertion\r\n    const spanEl = screen.getByText('現在のカウント:1');\r\n    expect(spanEl).toBeInTheDocument();\r\n});\r\n"],"mappings":";AAAA,SAASA,MAAM,EAAEC,MAAM,EAAEC,SAAS,QAAQ,wBAAwB;AAClE,OAAOC,OAAO,MAAM,WAAW;;AAE/B;AACA;AACA;AACA;AACA;AAJA,SAAAC,MAAA,IAAAC,OAAA;AAKAC,IAAI,CAAC,8BAA8B,EAAE,MAAM;EACvC;EACAN,MAAM,eAACK,OAAA,CAACF,OAAO;IAACI,WAAW,EAAE;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,CAAC;;EAEnC;EACA,MAAMC,kBAAkB,GAAGX,MAAM,CAACY,SAAS,CAAC,WAAW,CAAC;EACxDC,MAAM,CAACF,kBAAkB,CAAC,CAACG,iBAAiB,CAAC,CAAC;;EAE9C;EACA,MAAMC,GAAG,GAAGf,MAAM,CAACgB,SAAS,CAAC,QAAQ,EAAE;IAACC,IAAI,EAAE;EAAS,CAAC,CAAC;EACzDhB,SAAS,CAACiB,KAAK,CAACH,GAAG,CAAC;;EAEpB;EACA,MAAMI,MAAM,GAAGnB,MAAM,CAACY,SAAS,CAAC,WAAW,CAAC;EAC5CC,MAAM,CAACM,MAAM,CAAC,CAACL,iBAAiB,CAAC,CAAC;AACtC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}