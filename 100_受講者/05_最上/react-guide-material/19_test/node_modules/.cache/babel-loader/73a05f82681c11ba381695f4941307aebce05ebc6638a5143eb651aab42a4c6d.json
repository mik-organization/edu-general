{"ast":null,"code":"// import { render, screen } from \"@testing-library/react\";\n// import Message from \"./Message\";\n// import userEvent from \"@testing-library/user-event\";\n\n// /*\n// startフォルダ内にあるcomponentsフォルダにテストファイルを作成して、\n// Messageコンポーネントのテストをおこなってください。\n// テストは以下のQ1・Q2に従って作成してください。\n// Q1.画面内にinput要素が表示されていることをテストしてください。\n// Q2.input要素に値を入れると正しく値が更新されることをテストしてください。\n// */\n// describe('Messageコンポーネントの動作確認', () => {\n//     describe('画面操作正常性確認', () => {\n//         test('input要素が表示されていること', () => {\n//             render(<Message />);\n//             const inputEl = screen.getByRole('textbox');\n//             expect(inputEl).toBeInTheDocument();\n//         });\n//     });\n\n//     describe('画面操作正常性確認', () => {\n//         test('入力値の挿入で値が更新される', async () => {\n//             const user = userEvent.setup();\n//             render(<Message />);\n//             const inputEl = screen.getByRole('textbox')\n\n//             expect(inputEl.value).toBe(\"\"); \n//             await user.type(inputEl, 'こんにちは');\n\n//             expect(inputEl.value).toBe('こんにちは');\n//         });  \n//     });  \n\n// });\n\n// //  模範解答\n// describe('Messageコンポーネントの動作確認', () => {\n//     describe('画面操作正常性確認', () => {\n//         test('input要素が存在するか', () => {\n//             render(<Message />);\n//             const inputEl = screen.getByPlaceholderText('メッセージを入力してください');\n//             expect(inputEl).toBeInTheDocument();\n//         });\n//     });\n\n//     describe('画面操作正常性確認', () => {\n//         test('inputのstateが更新され、値が正しく変更されているか', async () => {\n//             const user = userEvent.setup();\n//             render(<Message />);\n//             const inputEl = screen.getByRole('textbox')\n\n//             await user.type(inputEl, 'こんにちは');\n\n//             expect(inputEl.value).toBe('こんにちは');\n//         });  \n//     });  \n\n// });","map":{"version":3,"names":[],"sources":["C:/Users/user/Documents/work/react-guide-material/19_test/src/055_practice_userEvent/start/components/Message.test.js"],"sourcesContent":["// import { render, screen } from \"@testing-library/react\";\r\n// import Message from \"./Message\";\r\n// import userEvent from \"@testing-library/user-event\";\r\n\r\n// /*\r\n// startフォルダ内にあるcomponentsフォルダにテストファイルを作成して、\r\n// Messageコンポーネントのテストをおこなってください。\r\n// テストは以下のQ1・Q2に従って作成してください。\r\n// Q1.画面内にinput要素が表示されていることをテストしてください。\r\n// Q2.input要素に値を入れると正しく値が更新されることをテストしてください。\r\n// */\r\n// describe('Messageコンポーネントの動作確認', () => {\r\n//     describe('画面操作正常性確認', () => {\r\n//         test('input要素が表示されていること', () => {\r\n//             render(<Message />);\r\n//             const inputEl = screen.getByRole('textbox');\r\n//             expect(inputEl).toBeInTheDocument();\r\n//         });\r\n//     });\r\n\r\n//     describe('画面操作正常性確認', () => {\r\n//         test('入力値の挿入で値が更新される', async () => {\r\n//             const user = userEvent.setup();\r\n//             render(<Message />);\r\n//             const inputEl = screen.getByRole('textbox')\r\n\r\n//             expect(inputEl.value).toBe(\"\"); \r\n//             await user.type(inputEl, 'こんにちは');\r\n\r\n//             expect(inputEl.value).toBe('こんにちは');\r\n//         });  \r\n//     });  \r\n\r\n// });\r\n\r\n\r\n// //  模範解答\r\n// describe('Messageコンポーネントの動作確認', () => {\r\n//     describe('画面操作正常性確認', () => {\r\n//         test('input要素が存在するか', () => {\r\n//             render(<Message />);\r\n//             const inputEl = screen.getByPlaceholderText('メッセージを入力してください');\r\n//             expect(inputEl).toBeInTheDocument();\r\n//         });\r\n//     });\r\n\r\n//     describe('画面操作正常性確認', () => {\r\n//         test('inputのstateが更新され、値が正しく変更されているか', async () => {\r\n//             const user = userEvent.setup();\r\n//             render(<Message />);\r\n//             const inputEl = screen.getByRole('textbox')\r\n\r\n//             await user.type(inputEl, 'こんにちは');\r\n\r\n//             expect(inputEl.value).toBe('こんにちは');\r\n//         });  \r\n//     });  \r\n\r\n// });"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}