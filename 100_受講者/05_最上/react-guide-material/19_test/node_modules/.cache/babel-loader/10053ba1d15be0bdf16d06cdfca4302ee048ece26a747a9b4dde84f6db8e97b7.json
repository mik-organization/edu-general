{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\work\\\\react-guide-material\\\\19_test\\\\src\\\\050_userEvent\\\\start\\\\components\\\\Message.test.js\";\nimport { render, screen } from \"@testing-library/react\";\nimport Message from \"./Message\";\nimport userEvent from \"@testing-library/user-event\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndescribe('Messageコンポーネントの動作確認', () => {\n  describe('初期表示の正常性確認', () => {\n    test('入力された文字が画面上に存在', () => {\n      render( /*#__PURE__*/_jsxDEV(Message, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 20\n      }, this));\n      const h2EL = screen.getByRole('textbox');\n      expect(h2EL).toBeInTheDocument();\n    });\n  });\n  describe('画面操作正常性確認', () => {\n    test('入力値の変更 > 送信ボタン押下', async () => {\n      const user = userEvent.setup();\n      render( /*#__PURE__*/_jsxDEV(Message, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 20\n      }, this));\n      const inputEl = screen.getByRole('textbox');\n      const btnEl = screen.getByRole('button', {\n        name: '送信ボタン'\n      });\n      const h2EL = screen.getByRole('heading', {\n        nema: '入力された文字:'\n      });\n      expect(btnEl).toBeDisabled(); //ボタンが非活性かどうか確認\n      expect(inputEl.value).toBe(\"\"); //空文字かどうか確認\n\n      await user.type(inputEl, 'こんにちは');\n      expect(btnEl).not.toBeDisabled();\n      await user.click(btnEl); //ボタンが活性化されているかどうか確認\n      expect(h2EL.textContent).toBe('入力された文字:こんにちは');\n    });\n  });\n});","map":{"version":3,"names":["render","screen","Message","userEvent","jsxDEV","_jsxDEV","describe","test","fileName","_jsxFileName","lineNumber","columnNumber","h2EL","getByRole","expect","toBeInTheDocument","user","setup","inputEl","btnEl","name","nema","toBeDisabled","value","toBe","type","not","click","textContent"],"sources":["C:/Users/user/Documents/work/react-guide-material/19_test/src/050_userEvent/start/components/Message.test.js"],"sourcesContent":["import { render, screen } from \"@testing-library/react\";\r\nimport Message from \"./Message\";\r\nimport userEvent from \"@testing-library/user-event\";\r\n\r\n\r\ndescribe('Messageコンポーネントの動作確認', () => {\r\n    describe('初期表示の正常性確認', () => {\r\n        test('入力された文字が画面上に存在', () => {\r\n            render(<Message />);\r\n            const h2EL = screen.getByRole('textbox')\r\n            expect(h2EL).toBeInTheDocument();\r\n        })\r\n    });\r\n\r\n    describe('画面操作正常性確認', () => {\r\n        test('入力値の変更 > 送信ボタン押下', async () => {\r\n            const user = userEvent.setup();\r\n            render(<Message />);\r\n            const inputEl = screen.getByRole('textbox')\r\n            const btnEl = screen.getByRole('button', { name: '送信ボタン' });\r\n            const h2EL = screen.getByRole('heading', { nema: '入力された文字:'});\r\n\r\n            expect(btnEl).toBeDisabled();  //ボタンが非活性かどうか確認\r\n            expect(inputEl.value).toBe(\"\");     //空文字かどうか確認\r\n\r\n            await user.type(inputEl, 'こんにちは');\r\n            expect(btnEl).not.toBeDisabled();\r\n\r\n            await user.click(btnEl);  //ボタンが活性化されているかどうか確認\r\n            expect(h2EL.textContent).toBe('入力された文字:こんにちは');\r\n\r\n\r\n        });\r\n\r\n    });\r\n\r\n})"],"mappings":";AAAA,SAASA,MAAM,EAAEC,MAAM,QAAQ,wBAAwB;AACvD,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,SAAS,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpDC,QAAQ,CAAC,qBAAqB,EAAE,MAAM;EAClCA,QAAQ,CAAC,YAAY,EAAE,MAAM;IACzBC,IAAI,CAAC,gBAAgB,EAAE,MAAM;MACzBP,MAAM,eAACK,OAAA,CAACH,OAAO;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,CAAC;MACnB,MAAMC,IAAI,GAAGX,MAAM,CAACY,SAAS,CAAC,SAAS,CAAC;MACxCC,MAAM,CAACF,IAAI,CAAC,CAACG,iBAAiB,CAAC,CAAC;IACpC,CAAC,CAAC;EACN,CAAC,CAAC;EAEFT,QAAQ,CAAC,WAAW,EAAE,MAAM;IACxBC,IAAI,CAAC,kBAAkB,EAAE,YAAY;MACjC,MAAMS,IAAI,GAAGb,SAAS,CAACc,KAAK,CAAC,CAAC;MAC9BjB,MAAM,eAACK,OAAA,CAACH,OAAO;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,CAAC;MACnB,MAAMO,OAAO,GAAGjB,MAAM,CAACY,SAAS,CAAC,SAAS,CAAC;MAC3C,MAAMM,KAAK,GAAGlB,MAAM,CAACY,SAAS,CAAC,QAAQ,EAAE;QAAEO,IAAI,EAAE;MAAQ,CAAC,CAAC;MAC3D,MAAMR,IAAI,GAAGX,MAAM,CAACY,SAAS,CAAC,SAAS,EAAE;QAAEQ,IAAI,EAAE;MAAU,CAAC,CAAC;MAE7DP,MAAM,CAACK,KAAK,CAAC,CAACG,YAAY,CAAC,CAAC,CAAC,CAAE;MAC/BR,MAAM,CAACI,OAAO,CAACK,KAAK,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAK;;MAEpC,MAAMR,IAAI,CAACS,IAAI,CAACP,OAAO,EAAE,OAAO,CAAC;MACjCJ,MAAM,CAACK,KAAK,CAAC,CAACO,GAAG,CAACJ,YAAY,CAAC,CAAC;MAEhC,MAAMN,IAAI,CAACW,KAAK,CAACR,KAAK,CAAC,CAAC,CAAE;MAC1BL,MAAM,CAACF,IAAI,CAACgB,WAAW,CAAC,CAACJ,IAAI,CAAC,eAAe,CAAC;IAGlD,CAAC,CAAC;EAEN,CAAC,CAAC;AAEN,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}