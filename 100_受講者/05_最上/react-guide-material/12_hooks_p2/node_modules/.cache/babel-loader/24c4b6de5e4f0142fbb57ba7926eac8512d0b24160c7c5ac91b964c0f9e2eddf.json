{"ast":null,"code":"var _s = $RefreshSig$();\nconst useTimer = () => {\n  _s();\n  const [time, setTime] = useState(0);\n  const [isRunning, setIsRunning] = useState(false);\n  useEffect(() => {\n    // console.log('init');\n    let intervalId = null;\n    if (isRunning) {\n      // console.log('timer start');\n\n      intervalId = window.setInterval(() => {\n        // console.log('interval running');\n        setTime(prev => prev + 1);\n      }, 1000);\n    }\n    return () => {\n      window.clearInterval(intervalId);\n      // console.log('end');\n    };\n  }, [isRunning]);\n  useEffect(() => {\n    // // console.log('updated');\n\n    document.title = 'counter:' + time;\n    window.localStorage.setItem('time-key', time);\n    return () => {\n      // debugger\n      // // console.log('updated end');\n    };\n  }, [time]);\n  useLayoutEffect(() => {\n    const _time = parseInt(window.localStorage.getItem('time-key'));\n    if (!isNaN(_time)) {\n      setTime(_time);\n    }\n  }, []);\n  const toggle = () => {\n    setIsRunning(prev => !prev);\n  };\n  const reset = () => {\n    setTime(0);\n    setIsRunning(false);\n  };\n};\n_s(useTimer, \"09vRLJ+Euplclo2tyLBwos/mb1o=\");\nexport default useTimer;","map":{"version":3,"names":["useTimer","_s","time","setTime","useState","isRunning","setIsRunning","useEffect","intervalId","window","setInterval","prev","clearInterval","document","title","localStorage","setItem","useLayoutEffect","_time","parseInt","getItem","isNaN","toggle","reset"],"sources":["C:/Users/user/Documents/work/react-guide-material/12_hooks_p2/src/070_customHook/start/useTimer.js"],"sourcesContent":["const useTimer = () => {\r\n    const [time, setTime] = useState(0);\r\n    const [isRunning, setIsRunning] = useState(false);\r\n  \r\n    useEffect(() => {\r\n      // console.log('init');\r\n      let intervalId = null;\r\n  \r\n      if(isRunning) {\r\n        // console.log('timer start');\r\n  \r\n        intervalId = window.setInterval(() => {\r\n          // console.log('interval running');\r\n          setTime(prev => prev + 1);\r\n        }, 1000);\r\n      }\r\n      \r\n      return () => {\r\n        window.clearInterval(intervalId)\r\n        // console.log('end');\r\n      }\r\n    }, [isRunning])\r\n    \r\n    useEffect(() => {\r\n      // // console.log('updated');\r\n      \r\n      document.title = 'counter:' + time;\r\n      window.localStorage.setItem('time-key', time);\r\n  \r\n      return () => {\r\n        // debugger\r\n        // // console.log('updated end');\r\n      }\r\n    }, [time]);\r\n  \r\n    useLayoutEffect(() => {\r\n      const _time = parseInt(window.localStorage.getItem('time-key'));\r\n      if(!isNaN(_time)) {\r\n        setTime(_time);\r\n      }\r\n    }, [])\r\n  \r\n    const toggle = () => {\r\n      setIsRunning(prev => !prev);\r\n    }\r\n  \r\n    const reset = () => {\r\n      setTime(0);\r\n      setIsRunning(false);\r\n    }\r\n  \r\n}\r\n\r\nexport default useTimer;"],"mappings":";AAAA,MAAMA,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGF,QAAQ,CAAC,KAAK,CAAC;EAEjDG,SAAS,CAAC,MAAM;IACd;IACA,IAAIC,UAAU,GAAG,IAAI;IAErB,IAAGH,SAAS,EAAE;MACZ;;MAEAG,UAAU,GAAGC,MAAM,CAACC,WAAW,CAAC,MAAM;QACpC;QACAP,OAAO,CAACQ,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;MAC3B,CAAC,EAAE,IAAI,CAAC;IACV;IAEA,OAAO,MAAM;MACXF,MAAM,CAACG,aAAa,CAACJ,UAAU,CAAC;MAChC;IACF,CAAC;EACH,CAAC,EAAE,CAACH,SAAS,CAAC,CAAC;EAEfE,SAAS,CAAC,MAAM;IACd;;IAEAM,QAAQ,CAACC,KAAK,GAAG,UAAU,GAAGZ,IAAI;IAClCO,MAAM,CAACM,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEd,IAAI,CAAC;IAE7C,OAAO,MAAM;MACX;MACA;IAAA,CACD;EACH,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEVe,eAAe,CAAC,MAAM;IACpB,MAAMC,KAAK,GAAGC,QAAQ,CAACV,MAAM,CAACM,YAAY,CAACK,OAAO,CAAC,UAAU,CAAC,CAAC;IAC/D,IAAG,CAACC,KAAK,CAACH,KAAK,CAAC,EAAE;MAChBf,OAAO,CAACe,KAAK,CAAC;IAChB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,MAAM,GAAGA,CAAA,KAAM;IACnBhB,YAAY,CAACK,IAAI,IAAI,CAACA,IAAI,CAAC;EAC7B,CAAC;EAED,MAAMY,KAAK,GAAGA,CAAA,KAAM;IAClBpB,OAAO,CAAC,CAAC,CAAC;IACVG,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;AAEL,CAAC;AAAAL,EAAA,CAnDKD,QAAQ;AAqDd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}