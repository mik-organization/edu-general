{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\work\\\\react-guide-material\\\\07_styling_component\\\\src\\\\050_chakra_ui\\\\start\\\\components\\\\Form.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { HStack, Input, Button, useToast } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = ({\n  createTodo\n}) => {\n  _s();\n  const [enteredTodo, setEnteredTodo] = useState(\"\");\n  const toast = useToast();\n  const addTodo = e => {\n    e.preventDefault();\n    if (!enteredTodo) {\n      toast({\n        title: \"新しいタスクを入力してください\",\n        status: \"error\",\n        //infoに変更すると青色のダイアログになる\n        duration: 2000,\n        //どれくらいの間表示するか\n        isClosable: true //ダイアログに閉じるボタンを表示するかどうか\n      });\n      return;\n    }\n    const newTodo = {\n      id: Math.floor(Math.random() * 1e5),\n      content: enteredTodo\n    };\n    createTodo(newTodo);\n    setEnteredTodo(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: addTodo,\n    children: /*#__PURE__*/_jsxDEV(HStack, {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"\\u65B0\\u3057\\u3044\\u30BF\\u30B9\\u30AF\",\n        _placeholder: {\n          opacity: \"0.3\",\n          color: \"gray.500\"\n        },\n        size: \"lg\",\n        variant: \"flushed\",\n        value: enteredTodo,\n        onChange: e => setEnteredTodo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\u8FFD\\u52A0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"r/bsdWTZpam4gO8vl0VbknnJVmw=\", false, function () {\n  return [useToast];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useState","HStack","Input","Button","useToast","jsxDEV","_jsxDEV","Form","createTodo","_s","enteredTodo","setEnteredTodo","toast","addTodo","e","preventDefault","title","status","duration","isClosable","newTodo","id","Math","floor","random","content","onSubmit","children","placeholder","_placeholder","opacity","color","size","variant","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Documents/work/react-guide-material/07_styling_component/src/050_chakra_ui/start/components/Form.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { HStack, Input, Button, useToast } from \"@chakra-ui/react\";\r\n\r\nconst Form = ({ createTodo }) => {\r\n  const [enteredTodo, setEnteredTodo] = useState(\"\");\r\n\r\n  const toast = useToast();\r\n\r\n  const addTodo = (e) => {\r\n    e.preventDefault();\r\n\r\n    if(!enteredTodo){\r\n      toast({\r\n        title: \"新しいタスクを入力してください\",\r\n        status: \"error\",  //infoに変更すると青色のダイアログになる\r\n        duration: 2000,   //どれくらいの間表示するか\r\n        isClosable: true, //ダイアログに閉じるボタンを表示するかどうか\r\n      });\r\n      return;\r\n    }\r\n\r\n    const newTodo = {\r\n      id: Math.floor(Math.random() * 1e5),\r\n      content: enteredTodo,\r\n    };\r\n\r\n    createTodo(newTodo);\r\n\r\n    setEnteredTodo(\"\");\r\n  };\r\n  return (\r\n    <form onSubmit={addTodo}>\r\n    <HStack>\r\n        <Input\r\n          placeholder=\"新しいタスク\"\r\n          _placeholder={{opacity: \"0.3\", color: \"gray.500\"}}\r\n          size=\"lg\"\r\n          variant=\"flushed\"\r\n          value={enteredTodo}\r\n          onChange={(e) => setEnteredTodo(e.target.value)}\r\n        />\r\n        <button>追加</button>\r\n    </HStack>\r\n      </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAC/B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMY,KAAK,GAAGR,QAAQ,CAAC,CAAC;EAExB,MAAMS,OAAO,GAAIC,CAAC,IAAK;IACrBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAG,CAACL,WAAW,EAAC;MACdE,KAAK,CAAC;QACJI,KAAK,EAAE,iBAAiB;QACxBC,MAAM,EAAE,OAAO;QAAG;QAClBC,QAAQ,EAAE,IAAI;QAAI;QAClBC,UAAU,EAAE,IAAI,CAAE;MACpB,CAAC,CAAC;MACF;IACF;IAEA,MAAMC,OAAO,GAAG;MACdC,EAAE,EAAEC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;MACnCC,OAAO,EAAEf;IACX,CAAC;IAEDF,UAAU,CAACY,OAAO,CAAC;IAEnBT,cAAc,CAAC,EAAE,CAAC;EACpB,CAAC;EACD,oBACEL,OAAA;IAAMoB,QAAQ,EAAEb,OAAQ;IAAAc,QAAA,eACxBrB,OAAA,CAACL,MAAM;MAAA0B,QAAA,gBACHrB,OAAA,CAACJ,KAAK;QACJ0B,WAAW,EAAC,sCAAQ;QACpBC,YAAY,EAAE;UAACC,OAAO,EAAE,KAAK;UAAEC,KAAK,EAAE;QAAU,CAAE;QAClDC,IAAI,EAAC,IAAI;QACTC,OAAO,EAAC,SAAS;QACjBC,KAAK,EAAExB,WAAY;QACnByB,QAAQ,EAAGrB,CAAC,IAAKH,cAAc,CAACG,CAAC,CAACsB,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,eACFlC,OAAA;QAAAqB,QAAA,EAAQ;MAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEb,CAAC;AAAC/B,EAAA,CA1CIF,IAAI;EAAA,QAGMH,QAAQ;AAAA;AAAAqC,EAAA,GAHlBlC,IAAI;AA4CV,eAAeA,IAAI;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}