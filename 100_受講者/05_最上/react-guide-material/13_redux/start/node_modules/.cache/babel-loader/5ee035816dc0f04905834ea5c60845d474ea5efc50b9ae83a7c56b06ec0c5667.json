{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { asyncCount } from \"../../api/counter\";\nconst counter = createSlice({\n  name: 'counter',\n  initialState: {\n    count: 0,\n    status: ''\n  },\n  reducers: {\n    add(state, {\n      type,\n      payload\n    }) {\n      state.count = state.count + payload;\n      // const newState = { ...state };\n      // newState.count = state.count + payload\n      // return newState;\n    },\n    minus(state, {\n      type,\n      payload\n    }) {\n      state.count = state.count - payload;\n      // const newState = { ...state };\n      // newState.count = state.count - payload\n      // return newState;\n    }\n  }\n});\nconst {\n  add,\n  minus\n} = counter.actions;\nconst addAsync = payload => {\n  return async (dispatch, getState) => {\n    const state = getState();\n    console.log(state);\n    const response = await asyncCount(payload);\n    dispatch(add(response.data));\n  };\n};\nexport { add, minus, addAsync };\nexport default counter.reducer;","map":{"version":3,"names":["createSlice","asyncCount","counter","name","initialState","count","status","reducers","add","state","type","payload","minus","actions","addAsync","dispatch","getState","console","log","response","data","reducer"],"sources":["C:/Users/user/Documents/work/react-guide-material/13_redux/start/src/060_createAsyncThunk/store/modules/counter.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nimport { asyncCount } from \"../../api/counter\"\r\n\r\nconst counter = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    count: 0,\r\n    status: ''\r\n  },\r\n  reducers: {\r\n    add(state, { type, payload }) {\r\n      state.count = state.count + payload;\r\n      // const newState = { ...state };\r\n      // newState.count = state.count + payload\r\n      // return newState;\r\n    },\r\n    minus(state, { type, payload }) {\r\n      state.count = state.count - payload;\r\n      // const newState = { ...state };\r\n      // newState.count = state.count - payload\r\n      // return newState;\r\n    }\r\n  }\r\n});\r\n\r\nconst { add, minus } = counter.actions;\r\n\r\nconst addAsync = (payload) => {\r\n  return async (dispatch, getState) => {\r\n    const state = getState();\r\n    console.log(state);\r\n    const response = await asyncCount(payload);\r\n    dispatch(add(response.data));\r\n  }\r\n}\r\n\r\n\r\nexport { add, minus, addAsync }\r\nexport default counter.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,SAASC,UAAU,QAAQ,mBAAmB;AAE9C,MAAMC,OAAO,GAAGF,WAAW,CAAC;EAC1BG,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IACZC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE;EACV,CAAC;EACDC,QAAQ,EAAE;IACRC,GAAGA,CAACC,KAAK,EAAE;MAAEC,IAAI;MAAEC;IAAQ,CAAC,EAAE;MAC5BF,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,GAAGM,OAAO;MACnC;MACA;MACA;IACF,CAAC;IACDC,KAAKA,CAACH,KAAK,EAAE;MAAEC,IAAI;MAAEC;IAAQ,CAAC,EAAE;MAC9BF,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,GAAGM,OAAO;MACnC;MACA;MACA;IACF;EACF;AACF,CAAC,CAAC;AAEF,MAAM;EAAEH,GAAG;EAAEI;AAAM,CAAC,GAAGV,OAAO,CAACW,OAAO;AAEtC,MAAMC,QAAQ,GAAIH,OAAO,IAAK;EAC5B,OAAO,OAAOI,QAAQ,EAAEC,QAAQ,KAAK;IACnC,MAAMP,KAAK,GAAGO,QAAQ,CAAC,CAAC;IACxBC,OAAO,CAACC,GAAG,CAACT,KAAK,CAAC;IAClB,MAAMU,QAAQ,GAAG,MAAMlB,UAAU,CAACU,OAAO,CAAC;IAC1CI,QAAQ,CAACP,GAAG,CAACW,QAAQ,CAACC,IAAI,CAAC,CAAC;EAC9B,CAAC;AACH,CAAC;AAGD,SAASZ,GAAG,EAAEI,KAAK,EAAEE,QAAQ;AAC7B,eAAeZ,OAAO,CAACmB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}